<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ctrl="clr-namespace:Librarian.KioskClient.Controls">

    <Style TargetType="{x:Type ctrl:CircledButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource ThemeBrush}" />
    </Style>

    <Style TargetType="{x:Type TextBlock}"
           x:Key="Label">
        <Setter Property="FontFamily"
                Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ThemeBrush}" />
    </Style>
    
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily"
                Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="MinHeight"
                Value="26" />
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="Padding"
                Value="11,0,0,0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="Foreground"
                Value="{DynamicResource ThemeBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource LightGrayBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Grid.Resources>
                            <ControlTemplate x:Key="ValidationToolTip"
                                             TargetType="{x:Type ToolTip}">

                                <Grid x:Name="Root"
                                      Margin="5"
                                      Opacity="0"
                                      RenderTransformOrigin="0,0">
                                    <Grid.RenderTransform>
                                        <TranslateTransform X="-25" />
                                    </Grid.RenderTransform>
                                    <Border Background="#052A2E31"
                                            CornerRadius="5"
                                            Margin="4,4,-4,-4" />
                                    <Border Background="#152A2E31"
                                            CornerRadius="4"
                                            Margin="3,3,-3,-3" />
                                    <Border Background="#252A2E31"
                                            CornerRadius="3"
                                            Margin="2,2,-2,-2" />
                                    <Border Background="#352A2E31"
                                            CornerRadius="2"
                                            Margin="1,1,-1,-1" />
                                    <Border Background="#FFDC000C"
                                            CornerRadius="2">
                                        <TextBlock Foreground="White"
                                                   MaxWidth="250"
                                                   Margin="8,4,8,4"
                                                   TextWrapping="Wrap"
                                                   Text="{Binding (Validation.Errors)[0].ErrorContent}" />
                                    </Border>
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsOpen"
                                             Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                     Storyboard.TargetName="Root"
                                                                     Duration="00:00:0.2"
                                                                     To="1" />
                                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                     Storyboard.TargetName="Root"
                                                                     Duration="00:00:0.2"
                                                                     To="0" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                     Storyboard.TargetName="Root"
                                                                     Duration="00:00:0.2"
                                                                     To="0" />
                                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                     Storyboard.TargetName="Root"
                                                                     Duration="00:00:0.2"
                                                                     To="-25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle"
                                                         Duration="0"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="DisabledVisualElement"
                                                         Duration="0"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="ReadOnlyVisualElement"
                                                         Duration="0"
                                                         To="0.79" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle"
                                                         Duration="0"
                                                         To="1" />
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusInnerRectangle"
                                                         Duration="0"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="ValidationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{Binding BorderThickness.Top, RelativeSource={RelativeSource TemplatedParent}}"
                                   Opacity="1"
                                   Fill="{TemplateBinding Background}" />
                        <Rectangle x:Name="FocusRectangle"
                                   StrokeThickness="{Binding BorderThickness.Top, RelativeSource={RelativeSource TemplatedParent}}"
                                   Opacity="0"
                                   Stroke="{DynamicResource TextBoxFocusBrush}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{Binding BorderThickness.Top, RelativeSource={RelativeSource TemplatedParent}}"
                                   Opacity="0"
                                   Margin="1"
                                   Stroke="{DynamicResource TextBoxFocusBrush}" />
                        <Grid Margin="0,1,0,0">
                            <Border x:Name="ReadOnlyVisualElement"
                                    Background="{x:Null}"
                                    Opacity="0" />
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost"
                                              BorderThickness="0"
                                              IsTabStop="False"
                                              Margin="4,2,2,2"
                                              VerticalAlignment="Stretch"
                                              Background="{x:Null}" />
                            </Grid>
                        </Grid>
                        <Rectangle x:Name="DisabledVisualElement"
                                   Stroke="{DynamicResource DisabledVisualElementBrush}"
                                   StrokeThickness="{Binding BorderThickness.Top, RelativeSource={RelativeSource TemplatedParent}}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{DynamicResource DisabledVisualElementBrush}" />

                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{DynamicResource RedCategoryBrush}"
                                BorderThickness="1"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="ValidationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{DynamicResource ValidationToolTip}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible"
                                                                                   Storyboard.TargetName="ValidationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <sys:Boolean>True</sys:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  Height="12"
                                  Width="12"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Margin="1,-4,-4,0">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{DynamicResource RedCategoryBrush}"
                                      Margin="1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="White"
                                      Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectionBrush"
                Value="{DynamicResource ActiveTileBrush}" />
    </Style>
    
</ResourceDictionary>